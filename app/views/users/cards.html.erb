<h3 class="header">My collection</h3>

<nav>
    <div class="nav-wrapper">
        <div class="input-field">
            <input type="search" id="nameFilter">
            <label for="search"><i class="mdi-action-search"></i></label>
            <i class="mdi-navigation-close"></i>
        </div>
    </div>
</nav>

<div class="row">
    <div class="col s3">
        <div class="input-field">
            <select id="classFilter">
                <option value="All">All</option>
                <option value="">Common</option>
                <option value="1">Warrior</option>
                <option value="2">Paladin</option>
                <option value="3">Hunter</option>
                <option value="4">Rogue</option>
                <option value="5">Priest</option>
                <option value="11">Druid</option>
                <option value="7">Shaman</option>
                <option value="8">Mage</option>
                <option value="9">Demonist</option>
            </select>
            <label>Hero</label>
        </div>
    </div>
    <div class="col s3">
        <div class="input-field">
            <select id="typeFilter">
                <option value="All">All</option>
                <option value="4">Minion</option>
                <option value="5">Spell</option>
                <option value="7">Weapon</option>
            </select>
            <label>Type</label>
        </div>
    </div>
    <div class="col s3">
        <div class="input-field">
            <select id="setFilter">
                <option value="All">All</option>
                <option value="2">Base</option>
                <option value="3">Classic</option>
                <option value="4">Reward</option>
                <option value="5">Missions</option>
                <option value="11">Promotion</option>
                <option value="12">Naxxramas</option>
                <option value="13">Goblins vs Gnomes</option>
                <option value="14">Blackrock Mountain</option>
                <option value="16">Credits</option>
            </select>
            <label>Set</label>
        </div>
    </div>
    <div class="col s3">
        <div class="input-field">
            <select id="costFilter">
                <option value="All">All</option>
                <option value="0">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8+">8+</option>
            </select>
            <label>Cost</label>
        </div>
    </div>
</div>

<table class="striped">
    <thead>
    <tr>
        <th>Set</th>
        <th>Quality</th>
        <th>Type</th>
        <th>Cost</th>
        <th>Health</th>
        <th>Attack</th>
        <th>Faction</th>
        <th>Class</th>
        <th>Name</th>
        <th>Description</th>
        <th>Popularity</th>
        <th>In possession</th>
        <th><a id="addAllCards" class="btn-floating"><i class="mdi-content-add"></i></a></th>
        <th colspan="3"></th>
    </tr>
    </thead>

    <tbody>
    <% @cards.each do |card, count| %>
        <tr class="card-line">
            <input type="hidden" value="<%= card.id %>"/>
            <td class="card-set"><%= card.set %></td>
            <td class="card-quality"><%= card.quality %></td>
            <td class="card-type"><%= card.type_id %></td>
            <td class="card-cost"><%= card.cost %></td>
            <td><%= card.health %></td>
            <td><%= card.attack %></td>
            <td><%= card.faction %></td>
            <td class="card-hero"><%= card.hero_id %></td>
            <td class="card-name"><%= card.name %></td>
            <td><%= card.description %></td>
            <td><%= card.popularity %></td>
            <td class="card-count"><%= count %></td>
            <td class="add-card"><a data-role="add-card" class="btn-floating"><i class="mdi-content-add"></i></a></td>
            <td class="delete-card">
                <a data-role="delete-card" class="btn-floating"><i class="mdi-content-remove-circle"></i></a>
            </td>
        </tr>
    <% end %>
    </tbody>
</table>

<script>
    (function($, window, document) {
        var costFilter = function(selectedValue, element) {
            return selectedValue === "All" || element === selectedValue || (selectedValue === "8+" && parseInt(element) >= 8)
        };

        var contains = function(selectedValue, element) {
            return element === '' || element.toLowerCase().indexOf(selectedValue.toLowerCase()) > -1;
        };

        var typeFilter = function(selectedValue, element) {
            return selectedValue === "All" || element === selectedValue;
        };

        var handlingFilters = function(selectorId, eventName, filter, elements, parent){
            $(selectorId).on(eventName, function() {
                $.each($(elements), function(i, e) {
                    if (filter($(this).val(), $(e).text()))
                        $(e).parent(parent).show();
                    else
                        $(e).parent(parent).hide();
                }.bind(this));
            });
        };

        var handlingNameFilter = function() {
            handlingFilters('#nameFilter', 'keyup', contains, 'td.card-name', 'tr');
        };

        var handlingClassFilter = function() {
            handlingFilters('#classFilter', 'change',  typeFilter, 'td.card-hero', 'tr');
        };

        var handlingCostFilter = function() {
            handlingFilters('#costFilter', 'change', costFilter, 'td.card-cost', 'tr');
        };

        var handlingTypeFilter = function() {
            handlingFilters('#typeFilter', 'change', typeFilter, 'td.card-type', 'tr');
        };

        var handlingSetFilter = function() {
            handlingFilters('#setFilter', 'change', typeFilter, 'td.card-set', 'tr');
        };

        var getCardToSave = function() {
            return $('tr:visible.card-line').map(function(i, e) {
                if ($(e).children('td.add-card').children('a').is(':visible')) {
                    return $(e);
                }
            }).get();
        };

        var handlingCardAdd = function() {
            $('a[data-role=add-card]').click(function() {
                var e = $(this).closest('tr');
                var cardId = e.children('input[type=hidden]').val();
                var count =  e.children('td.card-count');
                var quality = e.children('td.card-quality').html();
                var addButton = e.children('td.add-card').children('a');
                var deleteButton = e.children('td.delete-card').children('a');

                $.ajax({
                    type: "POST",
                    url: '<%= add_card_path %>',
                    data: JSON.stringify({ card_id:  cardId }),
                    dataType: "json",
                    headers: {
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    },
                    success: function() {
                        var newCount = parseInt(count.html()) + 1;
                        count.html(newCount);
                        displayButtons(addButton, deleteButton, quality, newCount);
                    }
                });
            });
        };

        var handlingDeleteCard = function() {
            $('a[data-role=delete-card]').click(function() {
                var e = $(this).closest('tr');
                var cardId = e.children('input[type=hidden]').val();
                var count =  e.children('td.card-count');
                var quality = e.children('td.card-quality').html();
                var addButton = e.children('td.add-card').children('a');
                var deleteButton = e.children('td.delete-card').children('a');

                $.ajax({
                    type: "POST",
                    url: '<%= delete_card_path %>',
                    data: JSON.stringify({ card_id:  cardId }),
                    dataType: "json",
                    headers: {
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    },
                    success: function() {
                        var newCount = parseInt(count.html()) - 1;
                        count.html(newCount);
                        displayButtons(addButton, deleteButton, quality, newCount);
                    }
                });
            });
        };

        var addAll = function() {
            $('#addAllCards').click(function() {
                var cardLines = getCardToSave();
                console.log(cardLines);
                var cardIds = [];
                cardLines.forEach(function(e) {
                    var count =  $(e).children('td.card-count');
                    var newCount = parseInt(count.html()) + 1;
                    count.html(newCount);
                    cardIds.push(parseInt($(e).children('input[type=hidden]').val()));
                });
                $.ajax({
                    type: "POST",
                    url: '<%= add_card_path %>',
                    data: JSON.stringify({ card_id:  cardIds }),
                    dataType: "json",
                    headers: {
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    },
                    success: function(d) {
                        initButtons();
                    }
                });
            });
        };

        var displayButtons = function(addBtn, deleteBtn, quality, count) {
            addBtn.show();
            deleteBtn.show();
            if (quality === 'legendary') {
                if (count > 0) {
                    addBtn.hide();
                } else {
                    deleteBtn.hide();
                }
            } else if (count >= 2) {
                addBtn.hide();    
            } else if (count <= 0) {
                deleteBtn.hide();
            }
        };

        var initButtons = function() {
            $("tr.card-line").each(function() {
                var e = $(this);
                var count = parseInt(e.children('td.card-count').html());
                var quality = e.children('td.card-quality').html();
                var addButton = e.children('td.add-card').children('a');
                var deleteButton = e.children('td.delete-card').children('a');
                displayButtons(addButton, deleteButton, quality, count);
            });
        }

        $(function() {
            handlingNameFilter();
            handlingClassFilter();
            handlingTypeFilter();
            handlingCostFilter();
            handlingSetFilter();
            handlingCardAdd();
            handlingDeleteCard();
            addAll();
            $('select').material_select();
            initButtons();
        });
    }(window.jQuery, window, document));
</script>